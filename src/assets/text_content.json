{
  "workPage": {
    "tracREU": {
      "title": "REU Research Intern",
      "company": "Translational AI Center at Iowa State University",
      "experiences": [
        "Investigated the effectiveness of model-free vs model-based reinforcement learning algorithms in solving the simulation to real gap",
        "Presented my research on a poster at Iowa State’s Summer Undergraduate Research Symposium, where I explained my findings to fellow researchers and engaged in idea exchanges with graduate students and professors",
        "Reimplemented popular reinforcement learning environments in PyTorch to transform them into differentiable simulators, facilitating research on short horizon actor-critic methods"
      ],
      "skills": ["Reinforcement Learning", "PyTorch"],
      "date": "May 2024 - August 2024"
    },
    "csl": {
      "title": "Research Assistant",
      "company": "Coordinated Systems Lab",
      "experiences": [
        "Utilized various resources to learn the fundamentals of machine learning",
        "Applied machine learning knowledge with PyTorch to write various reinforcement learning algorithms for toy Gymnasium environments",
        "Assisted in developing code for autonomous UAV simulation"
      ],
      "skills": ["Python", "Pytorch"],
      "date": "November 2023 - Present"
    },
    "johnDeere": {
      "title": "Engineering Intern on Implements and Attachments",
      "company": "John Deere",
      "experiences": [
        "Leveraged CAD and manufacturing process knowledge to develop a functional prototype of a lawnmower tool storage bracket for the select series lawnmowers",
        "Laid the groundwork for future tractor cab redesigns by integrating market research, homologation investigation, and product design strategies to develop initial prototypes for feature adds which bolster the company’s business portfolio"
      ],
      "skills": ["PTC Creo"],
      "date": "May 2023 - August 2023"
    },
    "graceTechnologies": {
      "title": "IIoT Engineering Intern",
      "company": "Grace Technologies",
      "experiences": [
        "Developed a field debugger application using python which queries an SQL database and returns various types of data in a succinct user interface",
        "Collaborated with senior engineers to design test fixtures and write python scripts which automatically validate the functionality of production-ready predictive maintenance equipment."
      ],
      "skills": ["Python"],
      "date": "May 2022 - May 2023"
    }
  },
  "projectPage": {
    "basketballShotTracker": {
      "title": "Basketball Shot Detection",
      "introduction": "This project combines my interests in sports and technology to create a tool that tracks basketball shots and predicts their outcomes using advanced machine learning techniques. By leveraging the power of YOLO and image segmentation, I aim to improve my shooting skills while deepening my understanding of computer vision.",
      "description": "This project uses YOLO and image segmentation to analyze basketball shots and predict their success. At its core, it’s a tool that watches basketball videos, tracks the ball, and makes predictions about whether the shot will make it through the hoop. The project involves three main components. First, there’s the model training. Initially, I tried using a dataset from Roboflow for transfer learning to teach the model to recognize basketballs and hoops, but it turned out that the performance was worse compared to using a standard YOLO model. Next, there's the detection part, where YOLOv8l scans each frame of a video, identifies where the basketball is, and draws bounding boxes around it. This detection process is crucial for analyzing how the ball moves during each shot. Finally, the trajectory analysis combines physics-based models and parabolic curve-fitting to predict the ball’s path. This part of the project aims to accurately map out how the ball travels and determine if it will land in the basket. By integrating machine learning and computer vision, the project offers insights that can help improve basketball performance.",
      "motivation": "As someone who spends a lot of time on the basketball court, I wanted a simple way to track my shooting stats without having to do it manually. I thought, why not use technology to make this easier and more insightful? This project was born out of that idea. On top of that, it was a great way for me to get better at computer vision, something I've been keen to learn more about. Working on this project has allowed me to apply what I've been learning in a practical and fun way.",
      "roadblocks": "Working on this project wasn't without its challenges. Finding the right data to train the model was tricky at first. I tried using Roboflow for transfer learning, hoping it would enhance model performance, but it ended up being less effective than sticking with a standard YOLO model. Another challenge was getting the model to accurately predict shot outcomes, which took a lot of tweaking and experimenting with different settings to get just right. Making sure the system could analyze video frames in real-time without losing accuracy was also a tough technical challenge, but tackling it taught me a lot.",
      "lessons": "This project has been a fantastic learning journey. I've learned a lot about how different technologies can work together to solve a problem. Working on model training and evaluation has given me a better understanding of how machine learning models work and the importance of testing them thoroughly. I've also improved my problem-solving skills by figuring out how to handle real-time video processing and fine-tuning the model's accuracy. Overall, this project has been an awesome way to improve both my basketball skills and my computer vision expertise.",
      "extra": {
        "github": "https://github.com/nvan21/Basketball-Shot-Detection"
      },
      "skills": ["YOLOv8", "Computer Vision", "Image Segmentation"],
      "thumbnail": "src/assets/basketball_tracker_thumbnail.png"
    },
    "computerVisionBasics": {
      "title": "Computer Vision Basics",
      "introduction": "I recently explored image classification using PyTorch by working with the MNIST and CIFAR-10 datasets. PyTorch’s intuitive framework made it easy to build and train convolutional neural networks. By experimenting with different architectures and hyperparameters, I gained a deeper understanding of how models learn to recognize patterns in images.",
      "description": "I learned the basics of computer vision by training feed-forward and convolutional neural networks on standard toy datasets like CIFAR and MNIST. This hands-on approach allowed me to dive into the fundamentals of image processing and pattern recognition, providing a solid foundation in computer vision techniques. I chose these datasets because they are well-known benchmarks in the field, providing a clear and structured way to evaluate my models’ performance and compare them to existing solutions. Documenting my learning process in Jupyter notebooks was a crucial part of this journey, as it allowed me to record my experiments, visualize data and results, and iterate on my models efficiently. By writing down my thought process, code, and findings, I created a comprehensive resource that I could reference in the future. This experience taught me not only how to implement these powerful models but also how to troubleshoot issues and optimize their performance. It was a rewarding process that demonstrated my ability to apply theoretical knowledge to practical problems, and it laid the groundwork for more advanced projects in computer vision and machine learning.",
      "motivation": "My motivation to learn image classification with PyTorch stemmed from a personal project idea: creating an app that can track basketball shots and determine if they go in. This concept intrigued me because I've always wanted a cheap way to track my practice statistics. I realized that mastering image classification would be a crucial step in understanding how to analyze video frames and detect specific events. By learning how to work with datasets like MNIST and CIFAR-10, I built the foundational skills necessary to bring my app idea to life.",
      "roadblocks": "Learning image classification with PyTorch came with its fair share of challenges. While getting started with torchvision data loaders was straightforward, I spent a lot of time trying to understand the intuition behind using components like batch normalization and max pooling layers in convolutional neural networks. It wasn’t just about knowing how they worked but figuring out why they were important and how they improved model performance. Visualizing and quantifying results added another layer of complexity. Learning to interpret metrics like accuracy, loss, and confusion matrices was initially overwhelming. Despite these hurdles, the journey was incredibly rewarding and kept me motivated to continue learning.",
      "lessons": "Working through image classification projects taught me several valuable lessons that are crucial in the computer vision field. I learned the importance of data augmentation for improving model generalization and gained a deep understanding of how convolutional layers function in feature extraction. Recognizing the significance of activation functions for introducing non-linearity was another key takeaway. I also discovered the effectiveness of using techniques like dropout to prevent overfitting. These experiences helped me build a solid foundation in computer vision, preparing me for opportunities where skills in neural networks and deep learning are essential.",
      "extra": {
        "github": "https://github.com/nvan21/image-classification/tree/main"
      },
      "skills": ["PyTorch", "Computer Vision", "CNNs"],
      "thumbnail": "./image_classification_thumbnail.webp"
    },
    "ppoImplementation": {
      "title": "PPO Algorithm Implementation",
      "introduction": "I implemented the Proximal Policy Optimization (PPO) algorithm while trying to learn the basics of deep reinforcement learning. Using PyTorch for the neural network backend and Gymnasium for the reinforcement learning environments, I was able to train expert level agents on scenarios with both discrete and continuous action spaces.",
      "description": "While diving into reinforcement learning, I decided to implement the Proximal Policy Optimization (PPO) algorithm to really understand how these advanced techniques work in practice. PPO is a popular algorithm because it balances performance and stability, making it ideal for my learning journey. I took on the challenge of designing and training reinforcement learning models from scratch, learning to balance exploration with exploitation, fine-tuning hyperparameters, and using neural networks to approximate value functions. I trained my models on Gymnasium environments, which provided a variety of scenarios with both discrete and continuous action spaces. These environments helped me understand the complexities and nuances involved in different types of decision-making processes. Throughout the process, I relied heavily on online resources such as tutorials, forums, and research papers to guide me. These resources provided invaluable insights and examples that helped me overcome obstacles and refine my approach. Experimenting and iterating based on this wealth of information allowed me to find the best solutions and solidify my understanding. This hands-on experience demonstrated my ability to effectively apply complex algorithms to solve real-world problems.Working on PPO significantly enhanced my skills in reinforcement learning and PyTorch, preparing me for more advanced projects.",
      "motivation": "When I joined my research lab, I had no prior experience with reinforcement learning (RL), but I was eager to expand my skill set and contribute to cutting-edge projects. I was drawn to the potential of RL to solve complex decision-making problems and was motivated by the challenge of mastering a new field. To begin my journey, I chose to focus on PPO since it's a widely used RL algorithm known for its stability and effectiveness.",
      "roadblocks": "As I started learning reinforcement learning with PPO, I encountered several roadblocks that tested my persistence. One major challenge was learning PyTorch, which, despite being a powerful tool, had a steep learning curve with its tensor operations and dynamic computation graphs. Additionally, figuring out the best practices for structuring and formatting RL code was tricky, as I needed to ensure my projects were organized and my experiments were reproducible. Translating the concepts from research papers into working code was another hurdle; it required me to carefully interpret mathematical formulations and apply them accurately. These roadblocks were challenging, but they also pushed me to deepen my understanding and improve my skills as I navigated the complexities of RL.",
      "lessons": "Through this journey, I gradually developed several skills that helped me better understand reinforcement learning. I learned how to use PyTorch to build neural networks and work with its dynamic computation graphs, which was essential for creating RL models. Working with Gymnasium environments gave me practical experience in setting up and experimenting with different RL scenarios. I also improved my ability to translate complex concepts from research papers into code, which helped bridge the gap between theory and practice. This process not only enhanced my coding skills but also deepened my understanding of RL algorithms. Additionally, I became more comfortable reading research papers, allowing me to keep up with the latest advancements in the field.",
      "extra": {
        "github": "https://github.com/nvan21/PPO-Pytorch-Implementation"
      },
      "skills": ["Python", "PyTorch", "RL", "Gymnasium"],
      "thumbnail": "./assets/ppo_thumbnail.png"
    },
    "f1tenthSimulation": {
      "title": "Autonomous Racing Simulation",
      "introduction": "I developed a dynamic follow the gap algorithm for autonomous driving using the F1TENTH ROS simulator, a platform designed for testing and experimenting with autonomous vehicle technology on a smaller scale. This project involved implementing and refining various path-planning and obstacle-avoidance techniques to navigate the simulator’s virtual racing environment.",
      "description": "In my autonomous driving project, I explored two major approaches: SLAM with RRT* and a dynamic Follow the Gap algorithm using LiDAR data. Initially, I aimed to develop a dynamic path-planning algorithm by combining Hector mapping with RRT*. This method involved dynamically partitioning a circular track, handling high-resolution mapping, and addressing issues like dynamic starting nodes due to the vehicle’s movement. Despite its promise, the complexity and computational demands of this approach led me to pivot to a different solution. I then focused on the dynamic Follow the Gap algorithm, which uses LiDAR data to navigate by always steering toward the furthest detected point. This approach was computationally efficient and took advantage of the high update rate of LiDAR to maintain a smooth trajectory. It involved filtering LiDAR data to account for the car’s physical dimensions and potential obstacles, ensuring the car could navigate safely and effectively. Despite initial concerns about trajectory smoothness, this method proved surprisingly effective and highlighted the balance between simplicity and performance in autonomous systems. Through this project, I deepened my understanding of the challenges and intricacies of path planning and sensor data interpretation in robotics.",
      "motivation": "For our final class project, we were told to create an algorithm for autonomous driving using the F1TENTH ROS simulator. The whole idea was to get a feel for how self-driving cars work by actually diving into the technology. I was really excited because it meant I could learn about Robot Operating System (ROS) which is the operating system used for controlling these vehicles. Working with the simulator was a great way to try out different driving strategies and understand the challenges involved in making cars drive themselves.",
      "roadblocks": "Working on the autonomous driving project came with its fair share of challenges. I had to learn Linux and ROS from scratch, which was a bit overwhelming at first since they’re quite different from what I was used to. Handling the noisy lidar data was another big hurdle, as it required filtering and processing to make it usable for navigation. On top of that, I had to dive into different self-driving algorithms like SLAM (Simultaneous Localization and Mapping), RRT* (Rapidly-exploring Random Tree), and Follow the Gap. Despite these roadblocks, tackling these issues head-on was a great learning experience.",
      "lessons": "I learned a lot from working on this autonomous driving project. Technically, it taught me how different parts of robotic systems connect and communicate, which was really eye-opening. Parsing lidar data was a big part of the process, and I got a good handle on cleaning up and using that data for navigation. I also got to explore how various autonomous driving algorithms work, like SLAM for mapping and RRT* for path planning. Understanding these concepts and seeing how they fit together in a real system was a huge part of what made this project so rewarding.",
      "extra": {
        "github": "https://github.com/nvan21/F1Tenth-Autonomous-Racing"
      },
      "skills": ["Python", "ROS", "F1Tenth"],
      "thumbnail": "./src/assets/f1tenth_thumbnail.png"
    },
    "portfolioWebsite": {
      "title": "React Portfolio Website",
      "introduction": "I wanted a place where I had more control over how I presented myself, so I learned how to implement popular frameworks like React, Tailwind, and GSAP to create an interactive, animated website. It gives me a place to explain what my projects are, why I did them, and what I learned from them.",
      "description": "Creating a portfolio website was an important step for me to showcase my work and skills in a way that I could fully control and personalize. I wanted a platform where I could effectively present myself and my projects, allowing potential employers or collaborators to see not just what I’ve learned, but how I apply that knowledge in real-world scenarios. By developing my own website, I aimed to stand out from others who might only list their skills on a resume. It was essential for me to demonstrate my capabilities and creativity through a tangible example of my work. For the development of the site, I chose to use React for its powerful component-based architecture, which made it easy to build a dynamic and responsive user interface. I paired React with Tailwind CSS to style the site, taking advantage of its utility-first approach to create a clean and modern design. To enhance the visual appeal and interactivity of the site, I integrated GSAP for animations, bringing my projects and skills to life with smooth transitions and engaging effects. This combination of tools allowed me to build a portfolio that not only highlights my technical abilities but also reflects my personal style and attention to detail. Overall, creating a portfolio website was a way for me to take control of my personal brand, showcasing my dedication to applying what I’ve learned in meaningful and impactful ways.",
      "motivation": "As previously mentioned, my motivation for this project was to give myself a place to present my work in a visually appealing, widely accessible way. I've always been interested in user interaction, so it was also an excuse to teach myself new skills commonly used for UX.",
      "roadblocks": "Before starting this website, I had zero experience with JavaScript, CSS, or HTML, and did not know how they interacted to form a website. Luckily, the internet is chalked full of useful graphics, tutorials, and examples that helped guide me through the learning process. After watching a few videos that explained the basics of the dynamics between these three languages and following a few tutorials on the development frameworks React, Tailwind, and GSAP, I decided to start implementing my knowledge to create this website. There were struggles as I learned how to interface between the different frameworks, but I was able to overcome them by reading through the documentation and searching through online forums for answers.",
      "lessons": "While not the most technically challenging, this project reminded me of the importance of starting. I often struggle with scope creep, and it causes me to give up on a project during the brainstorming phase because I get overwhelmed by everything I want to do. Understanding that the first version is not the last and that you can always revise is an important concept in engineering that this project reminded me of.",
      "extra": {
        "github": "https://github.com/nvan21/personal-portfolio-v2"
      },
      "skills": ["JavaScript", "React", "CSS"],
      "thumbnail": "./src/assets/portfolio_website.png"
    },
    "gravityGenerator": {
      "title": "Gravity Powered Generator",
      "introduction": "In a class project, we created a gravity-powered generator to provide sustainable lighting for developing countries. This device uses gravity to power reading lights, offering a reliable solution for areas with limited electricity access.",
      "description": "For a semester-long class project, our team set out to tackle energy access issues in developing regions. We focused on South Sudan, where only a small fraction of the population has electricity. Our goal was to design a sustainable product that could be built using local materials and support the local economy by being manufactured and serviced by local artisans. We created a gravity-powered generator that provides low-cost power for reading lights, benefiting people without electricity and supporting local entrepreneurs. The generator design includes a drivetrain to convert potential energy into rotational energy, a winch to lift the weight, and a sturdy plywood frame to handle stress. We optimized the design for brightness by maximizing rotational velocity. After prototyping, we improved the design by addressing gear slipping with skateboard tape, which increased friction but slightly reduced the duration the light stays on. We plan to enhance this with sprockets and chains in the future. The project was a great learning experience in combining engineering, sustainability, and social impact, and while we met most of our goals, we learned valuable lessons about balancing cost and functionality. Overall, this project was about creating an innovative solution that makes a real difference in people’s lives.",
      "motivation": "The gravity-powered generator project was a class assignment, but it really clicked with my personal goals. I wanted to dive into real-world design processes and get better at project management. This project was a chance to take an idea from start to finish, tackling challenges that people in developing regions face. I was motivated to learn how to go from brainstorming to prototyping to testing, all while working with a team to hit deadlines and meet our goals. It was a great way to combine my technical skills with a desire to create something that could make a difference, and it helped me see how I can use engineering to solve real problems.",
      "roadblocks": "One of the biggest roadblocks was collaborating effectively as a team. We had to navigate different ideas and perspectives to reach a consensus on the design. Technical difficulties also played a big role, as our original designs didn’t always work as intended. We had to go back to the drawing board several times to troubleshoot and refine our approach, which taught us a lot about perseverance and problem-solving. Thoroughly documenting our process was another challenge but ultimately essential. Keeping detailed records of our trials, errors, and eventual solutions helped us track progress and make informed decisions. It also ensured that we learned from our mistakes and could share our insights with others. These challenges tested our skills and teamwork, but they were crucial in helping us develop a functional and impactful product.",
      "lessons": "The gravity-powered generator project taught me several valuable lessons. Working closely with my team, I learned the importance of communication and collaboration, as we had to blend our ideas and skills to overcome challenges. Facing technical difficulties, such as initial designs not working as expected, taught me the importance of resilience and creativity in problem-solving. We learned that trial and error is a crucial part of the engineering process, and each setback provided an opportunity to refine our approach and improve the design. Documenting our process thoroughly highlighted the importance of keeping detailed records, which not only helped us track our progress but also ensured that our insights and solutions could be shared with others. Overall, this project reinforced the value of teamwork, adaptability, and meticulous documentation in bringing a complex idea to life.",
      "extra": {
        "github": ""
      },
      "skills": ["Solidworks", "Project Management", "Six Sigma Design"],
      "thumbnail": "./src/assets/gravity_generator_thumbnail.png"
    }
  }
}
